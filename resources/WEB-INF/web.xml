<?xml version="1.0" ?>
<web-app xmlns="http://java.sun.com/xml/ns/javaee"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
   version="2.5">

   <!-- RichFaces -->

   <context-param>
      <param-name>org.richfaces.skin</param-name>
      <param-value>DEFAULT</param-value>
   </context-param>

   <!-- Suppress spurious stylesheets -->

   <context-param>
      <param-name>org.richfaces.enableControlSkinning</param-name>
      <param-value>false</param-value>
   </context-param>
<context-param>
		<param-name>resteasy.use.builtin.providers</param-name>
		<param-value>true</param-value>
	</context-param>

   <context-param>
      <param-name>org.richfaces.enableControlSkinningClasses</param-name>
      <param-value>false</param-value>
   </context-param>

   <!-- Change load strategy to DEFAULT to disable sending scripts/styles as packs -->

   <context-param>
      <param-name>org.richfaces.resourceOptimization.enabled</param-name>
      <param-value>true</param-value>
   </context-param>

   <!-- Seam -->
   <listener>
      <listener-class>org.jboss.seam.servlet.SeamListener</listener-class>
   </listener>
<listener>
		<listener-class>org.jboss.resteasy.plugins.server.servlet.ResteasyBootstrap</listener-class>
	</listener>

	<servlet>
		<servlet-name>Resteasy</servlet-name>
		<servlet-class>
			org.jboss.resteasy.plugins.server.servlet.HttpServletDispatcher</servlet-class>
	</servlet>
	<servlet>
		<servlet-name>RESTEasy JSAPI</servlet-name>
		<servlet-class>org.jboss.resteasy.jsapi.JSAPIServlet</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>RESTEasy JSAPI</servlet-name>
		<url-pattern>/rest-js</url-pattern>
	</servlet-mapping>

   <filter>
      <filter-name>Seam Filter</filter-name>
      <filter-class>org.jboss.seam.servlet.SeamFilter</filter-class>
   </filter>

   <filter-mapping>
      <filter-name>Seam Filter</filter-name>
      <url-pattern>/*</url-pattern>
   </filter-mapping>

   <servlet>
      <servlet-name>Seam Resource Servlet</servlet-name>
      <servlet-class>org.jboss.seam.servlet.SeamResourceServlet</servlet-class>
   </servlet>

   <servlet-mapping>
      <servlet-name>Seam Resource Servlet</servlet-name>
      <url-pattern>/seam/resource/*</url-pattern>
   </servlet-mapping>

<!-- Change to "Production" when you are ready to deploy -->
    <context-param>
        <param-name>javax.faces.PROJECT_STAGE</param-name>
        <param-value>Development</param-value>
    </context-param>

   <!-- JSF -->
   <context-param>
      <param-name>javax.faces.DEFAULT_SUFFIX</param-name>
      <param-value>.xhtml</param-value>
   </context-param>

   <servlet>
      <servlet-name>Faces Servlet</servlet-name>
      <servlet-class>javax.faces.webapp.FacesServlet</servlet-class>
      <load-on-startup>1</load-on-startup>
   </servlet>

   <servlet-mapping>
      <servlet-name>Faces Servlet</servlet-name>
      <url-pattern>*.seam</url-pattern>
   </servlet-mapping>

   <security-constraint>
      <display-name>Restrict raw XHTML Documents</display-name>
      <web-resource-collection>
         <web-resource-name>XHTML</web-resource-name>
         <url-pattern>*.xhtml</url-pattern>
      </web-resource-collection>
      <auth-constraint/>
   </security-constraint>

   <!-- uncomment <ejb-local-ref> entries when deploying to GlassFish and (optionally) JBoss AS 5 -->
   <!--
   <ejb-local-ref>
      <ejb-ref-name>tempemail/AuthenticatorBean/local</ejb-ref-name>
      <ejb-ref-type>Session</ejb-ref-type>
      <local-home/>
      <local>it.i_node.tempemail.action.Authenticator</local>
   </ejb-local-ref>
   -->

   <!-- Add entries for each EJB session bean which is also a Seam component (not required on JBoss AS) --> 

   <!-- <persistence-unit-ref>
      <persistence-unit-ref-name>tempemail/pu</persistence-unit-ref-name>
      <persistence-unit-name>../tempemail.jar#tempemail</persistence-unit-name> -->
      <!-- The relative reference doesn't work on GlassFish. Instead, set the <persistence-unit-name> to "tempemail",
           package persistence.xml in the WAR, and add a <jar-file> element in persistence.xml with value "../../tempemail.jar".
      <persistence-unit-name>tempemail</persistence-unit-name>
      -->
   <!--</persistence-unit-ref>-->

</web-app>
