package it.i_node.tempemail.model;
// Generated 7-mar-2014 17.20.31 by Hibernate Tools 4.0.0

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.NotNull;

/**
 * DbmailPartlists generated by hbm2java
 */
@Entity
@Table(name = "dbmail_partlists", schema = "public", uniqueConstraints = @UniqueConstraint(columnNames = {
		"physmessage_id", "part_key", "part_depth", "part_order"}))
public class DbmailPartlists implements java.io.Serializable {

	private DbmailPartlistsId id;
	private DbmailMimeparts dbmailMimeparts;
	private DbmailPhysmessage dbmailPhysmessage;

	public DbmailPartlists() {
	}

	public DbmailPartlists(DbmailPartlistsId id,
			DbmailMimeparts dbmailMimeparts, DbmailPhysmessage dbmailPhysmessage) {
		this.id = id;
		this.dbmailMimeparts = dbmailMimeparts;
		this.dbmailPhysmessage = dbmailPhysmessage;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "physmessageId", column = @Column(name = "physmessage_id", nullable = false)),
			@AttributeOverride(name = "isHeader", column = @Column(name = "is_header", nullable = false)),
			@AttributeOverride(name = "partKey", column = @Column(name = "part_key", nullable = false)),
			@AttributeOverride(name = "partDepth", column = @Column(name = "part_depth", nullable = false)),
			@AttributeOverride(name = "partOrder", column = @Column(name = "part_order", nullable = false)),
			@AttributeOverride(name = "partId", column = @Column(name = "part_id", nullable = false))})
	@NotNull
	public DbmailPartlistsId getId() {
		return this.id;
	}

	public void setId(DbmailPartlistsId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "part_id", nullable = false, insertable = false, updatable = false)
	@NotNull
	public DbmailMimeparts getDbmailMimeparts() {
		return this.dbmailMimeparts;
	}

	public void setDbmailMimeparts(DbmailMimeparts dbmailMimeparts) {
		this.dbmailMimeparts = dbmailMimeparts;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "physmessage_id", nullable = false, insertable = false, updatable = false)
	@NotNull
	public DbmailPhysmessage getDbmailPhysmessage() {
		return this.dbmailPhysmessage;
	}

	public void setDbmailPhysmessage(DbmailPhysmessage dbmailPhysmessage) {
		this.dbmailPhysmessage = dbmailPhysmessage;
	}

}
