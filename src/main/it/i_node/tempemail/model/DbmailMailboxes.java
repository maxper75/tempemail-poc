package it.i_node.tempemail.model;
// Generated 7-mar-2014 17.20.31 by Hibernate Tools 4.0.0

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.DiscriminatorColumn;
import javax.persistence.DiscriminatorType;
import javax.persistence.DiscriminatorValue;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.NotNull;

/**
 * DbmailMailboxes generated by hbm2java
 */
@Entity
@Table(name = "dbmail_mailboxes", schema = "public",uniqueConstraints = @UniqueConstraint(columnNames = {"owner_idnr", "name"}))
@DiscriminatorColumn(name="mailboxType",discriminatorType=DiscriminatorType.CHAR)
@DiscriminatorValue("D")
@Inheritance(strategy=InheritanceType.JOINED)
public class DbmailMailboxes implements java.io.Serializable {

	private long mailboxIdnr;
	private DbmailUsers dbmailUsers;
	private String name;
	private short seenFlag;
	private short answeredFlag;
	private short deletedFlag;
	private short flaggedFlag;
	private short recentFlag;
	private short draftFlag;
	private short noInferiors;
	private short noSelect;
	private short permission;
	private long seq;
	private String mailboxType;
	private Set<DbmailSubscription> dbmailSubscriptions = new HashSet<DbmailSubscription>(
			0);
	private Set<DbmailMessages> dbmailMessageses = new HashSet<DbmailMessages>(
			0);
	private Set<DbmailAcl> dbmailAcls = new HashSet<DbmailAcl>(0);

	public DbmailMailboxes() {
	}

	public DbmailMailboxes(long mailboxIdnr, String name, short seenFlag,
			short answeredFlag, short deletedFlag, short flaggedFlag,
			short recentFlag, short draftFlag, short noInferiors,
			short noSelect, short permission, long seq) {
		this.mailboxIdnr = mailboxIdnr;
		this.name = name;
		this.seenFlag = seenFlag;
		this.answeredFlag = answeredFlag;
		this.deletedFlag = deletedFlag;
		this.flaggedFlag = flaggedFlag;
		this.recentFlag = recentFlag;
		this.draftFlag = draftFlag;
		this.noInferiors = noInferiors;
		this.noSelect = noSelect;
		this.permission = permission;
		this.seq = seq;
	}
	public DbmailMailboxes(long mailboxIdnr, DbmailUsers dbmailUsers,
			String name, short seenFlag, short answeredFlag, short deletedFlag,
			short flaggedFlag, short recentFlag, short draftFlag,
			short noInferiors, short noSelect, short permission, long seq,
			Set<DbmailSubscription> dbmailSubscriptions,
			Set<DbmailMessages> dbmailMessageses, Set<DbmailAcl> dbmailAcls) {
		this.mailboxIdnr = mailboxIdnr;
		this.dbmailUsers = dbmailUsers;
		this.name = name;
		this.seenFlag = seenFlag;
		this.answeredFlag = answeredFlag;
		this.deletedFlag = deletedFlag;
		this.flaggedFlag = flaggedFlag;
		this.recentFlag = recentFlag;
		this.draftFlag = draftFlag;
		this.noInferiors = noInferiors;
		this.noSelect = noSelect;
		this.permission = permission;
		this.seq = seq;
		this.dbmailSubscriptions = dbmailSubscriptions;
		this.dbmailMessageses = dbmailMessageses;
		this.dbmailAcls = dbmailAcls;
	}

	@Id
	@GeneratedValue(strategy=GenerationType.IDENTITY)
	@Column(name = "mailbox_idnr", unique = true, nullable = false)
	public long getMailboxIdnr() {
		return this.mailboxIdnr;
	}

	public void setMailboxIdnr(long mailboxIdnr) {
		this.mailboxIdnr = mailboxIdnr;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "owner_idnr")
	public DbmailUsers getDbmailUsers() {
		return this.dbmailUsers;
	}

	public void setDbmailUsers(DbmailUsers dbmailUsers) {
		this.dbmailUsers = dbmailUsers;
	}

	@Column(name = "name", nullable = false)
	@NotNull
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "seen_flag", nullable = false)
	public short getSeenFlag() {
		return this.seenFlag;
	}

	public void setSeenFlag(short seenFlag) {
		this.seenFlag = seenFlag;
	}

	@Column(name = "answered_flag", nullable = false)
	public short getAnsweredFlag() {
		return this.answeredFlag;
	}

	public void setAnsweredFlag(short answeredFlag) {
		this.answeredFlag = answeredFlag;
	}

	@Column(name = "deleted_flag", nullable = false)
	public short getDeletedFlag() {
		return this.deletedFlag;
	}

	public void setDeletedFlag(short deletedFlag) {
		this.deletedFlag = deletedFlag;
	}

	@Column(name = "flagged_flag", nullable = false)
	public short getFlaggedFlag() {
		return this.flaggedFlag;
	}

	public void setFlaggedFlag(short flaggedFlag) {
		this.flaggedFlag = flaggedFlag;
	}

	@Column(name = "recent_flag", nullable = false)
	public short getRecentFlag() {
		return this.recentFlag;
	}

	public void setRecentFlag(short recentFlag) {
		this.recentFlag = recentFlag;
	}

	@Column(name = "draft_flag", nullable = false)
	public short getDraftFlag() {
		return this.draftFlag;
	}

	public void setDraftFlag(short draftFlag) {
		this.draftFlag = draftFlag;
	}

	@Column(name = "no_inferiors", nullable = false)
	public short getNoInferiors() {
		return this.noInferiors;
	}

	public void setNoInferiors(short noInferiors) {
		this.noInferiors = noInferiors;
	}

	@Column(name = "no_select", nullable = false)
	public short getNoSelect() {
		return this.noSelect;
	}

	public void setNoSelect(short noSelect) {
		this.noSelect = noSelect;
	}

	@Column(name = "permission", nullable = false)
	public short getPermission() {
		return this.permission;
	}

	public void setPermission(short permission) {
		this.permission = permission;
	}

	@Column(name = "seq", nullable = false)
	public long getSeq() {
		return this.seq;
	}

	public void setSeq(long seq) {
		this.seq = seq;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "dbmailMailboxes")
	public Set<DbmailSubscription> getDbmailSubscriptions() {
		return this.dbmailSubscriptions;
	}

	public void setDbmailSubscriptions(
			Set<DbmailSubscription> dbmailSubscriptions) {
		this.dbmailSubscriptions = dbmailSubscriptions;
		
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "dbmailMailboxes")
	public Set<DbmailMessages> getDbmailMessageses() {
		return this.dbmailMessageses;
	}

	public void setDbmailMessageses(Set<DbmailMessages> dbmailMessageses) {
		this.dbmailMessageses = dbmailMessageses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "dbmailMailboxes")
	public Set<DbmailAcl> getDbmailAcls() {
		return this.dbmailAcls;
	}

	public void setDbmailAcls(Set<DbmailAcl> dbmailAcls) {
		this.dbmailAcls = dbmailAcls;
	}

	public String getMailboxType() {
		return mailboxType;
	}

	public void setMailboxType(String mailboxType) {
		this.mailboxType = mailboxType;
	}

}
