package it.i_node.tempemail.model;
// Generated 7-mar-2014 17.20.31 by Hibernate Tools 4.0.0

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;

/**
 * DbmailHeader generated by hbm2java
 */
@Entity
@Table(name = "dbmail_header", schema = "public")
public class DbmailHeader implements java.io.Serializable {

	private DbmailHeaderId id;
	private DbmailPhysmessage dbmailPhysmessage;
	private DbmailHeadervalue dbmailHeadervalue;
	private DbmailHeadername dbmailHeadername;

	public DbmailHeader() {
	}

	public DbmailHeader(DbmailHeaderId id, DbmailPhysmessage dbmailPhysmessage,
			DbmailHeadervalue dbmailHeadervalue,
			DbmailHeadername dbmailHeadername) {
		this.id = id;
		this.dbmailPhysmessage = dbmailPhysmessage;
		this.dbmailHeadervalue = dbmailHeadervalue;
		this.dbmailHeadername = dbmailHeadername;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "physmessageId", column = @Column(name = "physmessage_id", nullable = false)),
			@AttributeOverride(name = "headernameId", column = @Column(name = "headername_id", nullable = false)),
			@AttributeOverride(name = "headervalueId", column = @Column(name = "headervalue_id", nullable = false))})
	@NotNull
	public DbmailHeaderId getId() {
		return this.id;
	}

	public void setId(DbmailHeaderId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "physmessage_id", nullable = false, insertable = false, updatable = false)
	@NotNull
	public DbmailPhysmessage getDbmailPhysmessage() {
		return this.dbmailPhysmessage;
	}

	public void setDbmailPhysmessage(DbmailPhysmessage dbmailPhysmessage) {
		this.dbmailPhysmessage = dbmailPhysmessage;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "headervalue_id", nullable = false, insertable = false, updatable = false)
	@NotNull
	public DbmailHeadervalue getDbmailHeadervalue() {
		return this.dbmailHeadervalue;
	}

	public void setDbmailHeadervalue(DbmailHeadervalue dbmailHeadervalue) {
		this.dbmailHeadervalue = dbmailHeadervalue;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "headername_id", nullable = false, insertable = false, updatable = false)
	@NotNull
	public DbmailHeadername getDbmailHeadername() {
		return this.dbmailHeadername;
	}

	public void setDbmailHeadername(DbmailHeadername dbmailHeadername) {
		this.dbmailHeadername = dbmailHeadername;
	}

	@Override
	public String toString() {
		StringBuilder headerPrinter = new StringBuilder();
		headerPrinter.append(dbmailHeadername);
		headerPrinter.append(": ");
		headerPrinter.append(dbmailHeadervalue);
		return headerPrinter.toString();
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (!(obj instanceof DbmailHeader))
			return false;
		DbmailHeader other = (DbmailHeader) obj;
		if (id == null) {
			if (other.id != null)
				return false;
		} else if (!id.equals(other.id))
			return false;
		return true;
	}

}
